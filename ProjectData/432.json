{"nId": "537", "userId": "46", "type": "1", "title": "sql", "content": "CREATE TABLE Activity (      act_id int(11) NOT NULL.      act_name varchar(20) NOT NULL,      act_cal int(11) NOT NULL    );INSERT INTO Activity(act_id, act_name, act_cal) VALUES      (1, 'running', 37),       ....      (8, 'meditating', 50);SELECT desired_columnsFROM table_nameWHERE conditions;How do you apply default math functionsSUM   &    COUNTSELECT COUNT(column_name) FROM table_nameAVGSELECT AVG(column_name) as new_name FROM table_nameMAX   &   MINWhat do order by, group by, having syntaxHow do you use operator LIKE & in SQL?SELECT column_name(s)FROM table_nameWHERE column_name LIKE pattern;% A substitute for zero or more characters_ A substitute for a single characterINSELECT column_name(s)FROM table_nameWHERE column_name IN (value1,value2,...);What are the typrd of data anaylsis?DELETE FROM table_nameWHERE some_column=some_value;UPDATE table_nameSET column1=value1,column2=value2,...WHERE some_column=some_value;LIKE - is used to search for a specified pattern in a columnIN - allows you to specify multiply values in a WHERE clauaseJoins:INNER: Returns all rows when there is at least one match in BOTH tables SELECTcolumn_names(s) FROM orders a INNER JOIN customers g ON g. orders.CustomerID=a Customers.CunstomerID;LEFT: Returns all rows from the left table, and the match rows from the right table Assignment 31.               CREATE TABLE `Activity` (act_id int(11) NOT NULLact_id int(11) NOT NULLact_cal int(11) NOT NULLPRIMARY KEY (`act_id`),UNIQUE KEY `act_id` (`act_id`)  );INSERT INTO `Activity` (`act_id`, `act_name`, `act_cal`) VALUES(1, 'walking', 60),(2, 'jogging', 250),(3, 'meditating', 5),(4, 'rowing', 420),(5, 'fencing', 310),(6, 'tennis', 560),(7, 'yoga', 180),(8, 'showering', 60);2.               CREATE TABLE  `Activity_log` (`log_id` int(11) NOT NULL AUTO_INCREMENT,`act_id` int(11) NOT NULL,`duration` int(11) NOT NULL,`log_timestamp` varchar(14) NOT NULL,PRIMARY KEY (`log_id`),UNIQUE KEY `log_id` (`log_id`)     );INSERT INTO `Activity_log` (`log_id`, `act_id`, `duration`, `log_timestamp`) VALUES(1, 1, 60, '20170214085000'),(2, 2, 25, '20170214095100'),(3, 3, 5, '20170214101100'),(4, 6, 90, '20170215070000'),(5, 1, 30, '20170215084000'),(6, 8, 20, '20170215101000'),(7, 1, 20, '20170215111000'),(8, 1, 20, '20170215121000'),(9, 3, 30, '20170215141000'),(10, 1, 20, '20170215151000'),(11, 1, 10, '20170215153500'),(12, 8, 20, '20170215170000');3. (a) how many minutes were you active on 2017/02/14?SELECT SUM(duration) FROM activity_log WHERE log_timestamp LIKE \"20170214%\";(b) how many minutes did you spend on walking 2017/02/5?SELECT SUM(ACL.duration) AS spend_time FROM Activity_log ACL JOIN Activity AC ON ACL.act_id = AC.act_id WHERE ACL.log_timestamp LIKE \"20170215%\" AND AC.act_name = \"walking\"; (c) how many minutes did you spend on walking 2017/02/15 before noon?SELECT SUM(ACL.duration) AS spend_time FROM Activity_log ACL JOIN Activity AC ON ACL.act_id = AC.act_id WHERE ACL.log_timestamp < \"20170215120000\" AND ACL.log_timestamp >= \"20170215000000\" AND AC.act_name = 'walking' (d) how many different kinds of activities did you do? SELECT COUNT( DISTINCT act_id ) AS total_count FROM Activity_log; (e) how many calories consumption each day?SELECT SUM(AC.act_cal) AS calories_consumption, SUBSTR(ACL.log_timestamp, 1, 8) AS date FROM Activity AC JOIN Activity_log ACL ON ACL.act_id = AC.act_id GROUP BY date;(f) what is the most exhausting activity that you did on 2017/02/15?SELECT AC.act_name FROM Activity_log ACL JOIN Activity AC ON ACL.act_id = AC.act_id WHERE ACL.log_timestamp LIKE \"20170215%\" ORDER BY AC.act_cal DESC LIMIT 0,1;4.Why do we use two tables here instead of one? (Why don?t we just log behaviors explicitly with activity name and calories?)Ans: . To use two tables here is the result of database normalization. The purpose is to maintain table integrity, reduce dependency, and avoid redundant actions.", "upVote": 0, "downVote": 0, "tags": ["SQL", "sql", "distinct", "like", "where", "substr", "select"], "favorite": false, "dateCreated": "2017-11-20 03:30:32", "dateModified": "2017-11-20 03:30:32"}