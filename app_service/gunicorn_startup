#!/bin/bash

NAME="app_service"                                  # Name of the application
DJANGODIR=/home/ubuntu/adaptiveprojectbackend/app_db             # Django project directory
SOCKFILE=/home/ubuntu/adaptiveprojectbackend/run/gunicorn.sock  # we will communicte using this unix socket
USER=ubuntu                                      # the user to run as
GROUP=ubuntu                                     # the group to run as
NUM_WORKERS=1                                     # how many worker processes should Gunicorn spawn
DJANGO_SETTINGS_MODULE="app_db.settings.local"            # which settings file should Django use
GUNICORN_MODULE=/home/ubuntu/adaptiveprojectbackend/app_service/app_service/conf/gunicorn.py # WSGI module name
START_APP=/home/ubuntu/adaptiveprojectbackend/app_service/app_service/conf/service_app
LOGS_FILE=/home/ubuntu/logs/django_logs

echo "Starting $NAME as `whoami`"

# Activate the virtual environment
cd $DJANGODIR
source /home/ubuntu/venv/bin/activate
export DJANGO_SETTINGS_MODULE=$DJANGO_SETTINGS_MODULE
export PYTHONPATH=$DJANGODIR:$PYTHONPATH

# Create the run directory if it doesn't exist
RUNDIR=$(dirname $SOCKFILE)
test -d $RUNDIR || mkdir -p $RUNDIR

# Start your Django Unicorn
# Programs meant to be run under supervisor should not daemonize themselves (do not use --daemon)

#exec gunicorn ${DJANGO_WSGI_MODULE}:application \
#  --name $NAME \
#  --workers $NUM_WORKERS \
#  --user=$USER --group=$GROUP \
#  --bind=localhost:7285 \
#  --log-level=debug \
#  --log-file=$LOGS_FILE

exec gunicorn -c $GUNICORN_MODULE $STARTAPP:app
